name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish_workspace_crates:
    name: Publish workspace crate (${{ matrix.crate }})
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        crate: [celery-codegen]
    steps:
    - uses: actions/checkout@v2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Log in to crates.io
      uses: actions-rs/cargo@v1
      with:
        command: login
        args: ${{ secrets.CARGO_TOKEN }}

    - name: Publish ${{ matrix.crate }} to crates.io
      run: |
        cd ${{ matrix.crate }}
        cargo publish

  publish_celery_crate:
    name: Publish celery crate
    runs-on: ubuntu-latest
    needs: [publish_workspace_crates]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Log in to crates.io
      uses: actions-rs/cargo@v1
      with:
        command: login
        args: ${{ secrets.CARGO_TOKEN }}

    - name: Publish celery to crates.io
      run: |
        sleep 30  # wait a few seconds for the workspace crates to update on crates.io
        cargo publish

  publish_github_release:
    name: Publish github release
    runs-on: ubuntu-latest
    needs: [publish_celery_crate]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v1

      - name: Prepare environment
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV;

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Generate release notes
        run: |
          python scripts/generate_release_notes.py > ${{ github.workspace }}-RELEASE_NOTES.md

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ github.workspace }}-RELEASE_NOTES.md
          prerelease: ${{ contains(env.TAG, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
